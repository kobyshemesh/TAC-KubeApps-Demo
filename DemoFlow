#This is performed with Kubernetes cluster on GCP, but you can connect to any cluster.
#Connect to your k8s cluster
gcloud container clusters get-credentials ZZZ --zone YYYY --project XXXX
#Make sure that you are connected to the correct cluster
kubectl config get-contexts
#*******************************************************************************************
#Navigate to TAC dashbaord
#Explain the diffrent types of filters on the left side:
#Containers/Helm Chart Etc..
#Add New Application (Explain that this will not initaite new build, because this is Demo Env). and complete the creation, until you will get the message that this is demo account.
#Navigate to helm carts filter and choose one of the helmchart to show the detailes.
kubectl get ns #show the kubeapps ns that was created
#*******************************************************************************************
#Get the secret of the admin service account
kubectl get secret $(kubectl get serviceaccount kubeapps-operator -o jsonpath='{range .secrets[*]}{.name}{"\n"}{end}' | grep kubeapps-operator-token) -o jsonpath='{.data.token}' -o go-template='{{.data.token | base64decode}}' && echo
#document the secret
#from your terminal run the below:
export POD_NAME=$(kubectl get pods --namespace kubeapps -l "app=kubeapps" -o jsonpath="{.items[0].metadata.name}")
kubectl port-forward --namespace kubeapps $POD_NAME 8080:8080
#In your browser navigate to the below URL:
http://127.0.0.1:8080/#/login
#Navigate to Configuration --> App Repositories, and show that all other repositories removed completly and you allow only the verified catalog.
#Create new service like MySQL, do not choose the latest version.

